service: users-api

custom:
  region: ${self:provider.region} 
  stage: ${opt:stage, self:provider.stage}
  serverless-dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      docker: true
      seed: true
      convertEmptyValues: true

plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline # must be loaded after for some reason...

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
  environment:
    USER_TABLE: ${self:custom.stage}-users

functions:
  app:
    handler: src/handler.handler
    events:
      - httpApi:
          path: "/{proxy+}"
          method: "*"

resources:
  Resources:
    UserTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.stage}-users
